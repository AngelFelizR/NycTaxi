---
title: "Defining Development Environment"
editor_options: 
  chunk_output_type: console
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

In order to reproduce the results of this project we need to follow the following steps to run the code using the same environment:

1. Install **docker** by installing [Docker Desktop](https://www.docker.com/products/docker-desktop/) or just the [Docker Engine](https://docs.docker.com/engine/install/) if Linux is your operating system. I addapted the next script to install docker on **debian 13** by running it as super user.

```bash
apt update
sudo apt install apt-transport-https ca-certificates curl gnupg2 software-properties-common
curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian" trixie stable
apt update
apt-cache policy docker-ce
apt install docker-ce
systemctl status docker
/usr/sbin/usermod -aG docker <YOUR-USER>
su - <YOUR-USER>
```

2. Download the image related with this project.

```bash
docker pull angelfelizr/nyc-taxi-nix:4.5.1
```

3. Go the parent directory under you want to clone the project.

```bash
cd <parent-dir-path>
```

4. Download the repo by running.

```bash
git clone https://github.com/AngelFelizR/NycTaxi
```

5. The run the next command to run Rstudio Server from a new container.

```bash
docker run --rm -tid \
  --name nyc-taxi-container \
  -p 2222:22 \
  -v <parent-dir-path>/NycTaxi:/root/NycTaxi \
  angelfelizr/nyc-taxi-nix:4.5.1
```

6. Access to thhe container by ssh by the defined port and use "amo_r" to access to the project as a root user.

```bash
ssh root@localhost -p 2222
```

9. Then open the **NycTaxi** project from Rstudio.

10. Go to the R console and restore all packages listed on the `renv.lock` file.

```r
renv::restore()
```

11. After creating both folders we can run our container by running the next command based on your working directory.

```bash
docker stop rstudio
```
