---
title: "Business Understanding Overview"
params:
  UpdateSimulation: FALSE
editor_options: 
  chunk_output_type: console
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

## Describing the process

The elements of the process are defined using a **SIPOC** diagram.

```{r parsermd-chunk-1, echo = FALSE}
DiagrammeR::grViz('
digraph SIPOC {
    rankdir=LR;
    node [shape=box];
    subgraph cluster_S {
        label="Suppliers";
        S1 [label="Gas Station"];
        S2 [label="Car Manufacturer"];
        S3 [label="Taxi Application"];
        S4 [label="Telecommunication\nCompany"];
        S5 [label="Smartphone Supplier"];
        S6 [label="Maintenance\nService Providers"];
    }
    subgraph cluster_I {
        label="Inputs";
        I1 [label="Gas"];
        I2 [label="Car"];
        I3 [label="Start\nLocation"];
        I4 [label="End\nLocation"];
        I5 [label="Internet"];
        I6 [label="Smartphone"];
        I7 [label="Customer\nRequests"];
    }
    subgraph cluster_P {
        label="Process";
        P1 [label="The customer requests a taxi"];
        P2 [label="the driver arrives at\nthe pick-up location"];
        P3 [label="The driver picks the customer up"];
        P4 [label="The driver drives to destination"];
        P5 [label="The driver leaves the customer\nat the end point"];
    }
    subgraph cluster_O {
        label="Outputs";
        O2 [label="Customer travel experience"];
        O3 [label="Customer transfer"];
        O4 [label="Payment"]
    }
    subgraph cluster_C {
        label="Customers";
        C1 [label="Taxi User"];
    }
    S1 -> I1 [style=invis];
    I1 -> P1 [style=invis];
    P1 -> O2 [style=invis];
    O2 -> C1 [style=invis];
    P1 -> P2 [constraint=false];
    P2 -> P3 [constraint=false];
    P3 -> P4 [constraint=false];
    P4 -> P5 [constraint=false];
}

')
```

## Available features groups

1. Available **before arriving** at the pick-up location, so can be used as **predictors**.

| **Field Name** | **Description** |
|:-----------------------------------|:-----------------------------------|
| **hvfhs_license_num** | The TLC license number of the HVFHS base or business. As of September 2019, the HVFHS licensees are the following: <br> - HV0002: Juno <br> - HV0003: Uber <br> - HV0004: Via <br> - HV0005: Lyft |
| **wav_request_flag** | Did the passenger request a wheelchair-accessible vehicle (WAV)? (Y/N) |
| **wav_match_flag** | Did the trip occur in a wheelchair-accessible vehicle (WAV)? (Y/N) |
| **request_datetime** | Date/time when passenger requested to be picked up |
| **PULocationID** | TLC Taxi Zone in which the trip began |
| **DOLocationID** | TLC Taxi Zone in which the trip ended |
| **shared_request_flag** | Did the passenger agree to a shared/pooled ride, regardless of whether they were matched? (Y/N) |
| **shared_match_flag** | Did the passenger share the vehicle with another passenger who booked separately at any point during the trip? (Y/N) |
| **trip_miles** | Total miles for passenger trip |
| **tolls** | Total amount of all tolls paid in trip |
| **airport_fee** | \$2.50 for both drop off and pick up at LaGuardia, Newark, and John F. Kennedy airports |

1. Available **after arriving** ending the trip, so can be used to estimate the **outcome** to predict.

| **Field Name** | **Description** |
|:-----------------------------------|:-----------------------------------|
| **trip_time** | Total time in seconds for passenger trip |
| **driver_pay** | Total driver pay (not including tolls or tips and net of commission, surcharges, or taxes) |
| **tips** | Total amount of tips received from passenger |


::: {.callout-note}
**trip_time** and **driver_pay** can also be used as predictors, as taxi apps usually provide very good predictions of these two variables. They can be used to predict the output where the only variable that we don't have any clue about is the trip **tip**.
:::


## Stakeholders

-   Taxi drivers
-   Taxi companies
-   Customers
-   NYC Taxi and Limousine Commission